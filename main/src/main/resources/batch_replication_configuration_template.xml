<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

  <property>
    <name>airbnb.reair.audit_log.db.jdbc</name>
    <value>jdbc:mysql://myhost:myport/mydb</value>
    <comment>
      JDBC connection URL to the MySQL instance containing the audit log.
      The URL should include the DB name as well.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.audit_log.db.user</name>
    <value>username</value>
    <comment>Username for the audit log MySQL DB</comment>
  </property>

  <property>
    <name>airbnb.reair.audit_log.db.password</name>
    <value>password</value>
    <comment>Password for the audit log DB</comment>
  </property>

  <property>
    <name>airbnb.reair.audit_log.db.table</name>
    <value>audit_log</value>
    <comment>Name of the audit log MySQL table</comment>
  </property>

  <property>
    <name>airbnb.reair.audit_log.objects.db.table</name>
    <value>audit_objects</value>
    <comment>Name of the audit objects MySQL table</comment>
  </property>

  <property>
    <name>airbnb.reair.state.db.jdbc</name>
    <value>jdbc:mysql://myhost:myport/mydb</value>
    <comment>
      JDBC connection URL to the MySQL instance that contains the state tables.
      The URL should include the DB name as well.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.state.db.user</name>
    <value>username</value>
    <comment>Username for MySQL instance containing the state tables.</comment>
  </property>

  <property>
    <name>airbnb.reair.state.db.password</name>
    <value>password</value>
    <comment>Password for MySQL instance containing the state tables.</comment>
  </property>

  <property>
    <name>airbnb.reair.state.db.table</name>
    <value>replication_jobs</value>
    <comment>Name of the table containing replication job details.</comment>
  </property>

  <property>
    <name>airbnb.reair.state.kv.db.table</name>
    <value>key_value</value>
    <comment>Name of the table containing key/value pairs.</comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.src.name</name>
    <value>production</value>
    <comment>
      Name of the source cluster. It can be an arbitrary string and is used in
      logs, tags, etc.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.src.metastore.url</name>
    <value>thrift://myhost:myport</value>
    <comment>Source metastore Thrift URL.</comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.src.hdfs.root</name>
    <value>hdfs://airfs-prod</value>
    <comment>Source cluster HDFS root</comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.src.hdfs.tmp</name>
    <value>hdfs://airfs-prod/tmp/replication</value>
    <comment>
      Directory for temporary files on the source cluster.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.dest.name</name>
    <value>test</value>
    <comment>
      Name of the source cluster. It can be an arbitrary string and is used in
      logs, tags, etc.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.dest.metastore.url</name>
    <value>thrift://myhost:myport</value>
    <comment>Destination metastore Thrift URL.</comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.dest.hdfs.root</name>
    <value>hdfs://airfs-test/</value>
    <comment>Destination cluster HDFS root.</comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.dest.hdfs.tmp</name>
    <value>hdfs://airfs-test/tmp/hive_replication</value>
    <comment>
      Directory for temporary files on the source cluster. Table / partition
      data is copied to this location before it is moved to the final location,
      so it should be on the same filesystem as the final location.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.object.filter</name>
    <value>com.airbnb.di.hive.replication.filter.RegexReplicationFilter</value>
    <comment>
      Name of the class used to filter out entries from replication
    </comment>
  </property>

  <property>
    <name>airbnb.reair.worker.threads</name>
    <value>20</value>
    <comment>
      Number of worker threads. Each worker threads process one entry at a time.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.jobs.in_memory_count</name>
    <value>600</value>
    <comment>
      Number of jobs that can be kept in memory. Typically, this is a large nubmer
      so that historical jobs can be referenced.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.thrift.port</name>
    <value>9090</value>
    <comment>Port that the thrift service should listen on.</comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.batch.output.dir</name>
    <value>hdfs://airfs-test/user/test/test_output</value>
    <comment>
      This configuration must be provided. It gives location to store each stage
      MR job output.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.batch.input</name>
    <value>hdfs://airfs-test/user/test/input.txt</value>
    <comment>
      Optional input list file. The file is text format with each line specified
      as dbname.tablename. If input list is not provided, the job will go through
      all databases and tables in the hive metastore.
    </comment>
  </property>

  <property>
    <name>airbnb.reair.clusters.batch.metastore.blacklist</name>
    <value>testdb:test.*,tmp_.*:.*</value>
    <comment>
      Comma seperated regex blacklist. dbname_regex:tablename_regex,...
    </comment>
  </property>

</configuration>
